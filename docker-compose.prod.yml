services:
  backend:
    build:
      context: ./backend
    container_name: clouder-backend-prod
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload
    env_file:
      - ./backend/.env
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: clouder-frontend-prod
    env_file:
      - ./frontend/.env
    networks:
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: clouder-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: clouder-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


networks:
  app-network:
    driver: bridge

volumes:
  logs: